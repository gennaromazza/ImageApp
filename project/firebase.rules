rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email == "gennaro.mazzacane@gmail.com";
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Bookings collection
    match /bookings/{bookingId} {
      // Allow admin to read all bookings
      allow read: if isAdmin();
      
      // Allow users to read their own bookings
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow public read for date availability checks
      allow read: if 
        // For checking available dates
        request.query.limit <= 100 && 
        'booking_date' in request.query.filters;
      
      // Allow creation with validation
      allow create: if true;
      
      // Only admin can update or delete
      allow update, delete: if isAdmin();

      // Galleries subcollection
      match /galleries/{photoId} {
        allow read: if true;
        allow write: if isAdmin();
      }

      // Notes subcollection
      match /notes/{noteId} {
        allow read: if isAdmin() || 
                    (isAuthenticated() && exists(/databases/$(database)/documents/bookings/$(bookingId)));
        allow write: if isAdmin();
      }
    }

    // Settings collection
    match /settings/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Status history collection
    match /statusHistory/{historyId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // All other collections require admin access
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}